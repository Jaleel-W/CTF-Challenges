CSCI 400 - Lab 10: Program Misuse & Unconventional File Access
https://img.shields.io/badge/pwn.college-Lab%252010-blue
https://img.shields.io/badge/Linux-Tool%2520Misuse-red
https://img.shields.io/badge/Security-Unconventional%2520Access-green
https://img.shields.io/badge/CTF-File%2520Reading-orange

Creative exploitation of standard Linux tools for file access and data extraction in restricted environments, demonstrating how common utilities can be repurposed for security challenges.

🚀 Lab Overview
This repository contains solutions and documentation for CSCI 400 Lab 10, focusing on unconventional uses of standard Linux programs to read and manipulate files, particularly in scenarios where direct access might be restricted.

🔍 Tools Explored
cat - Basic file concatenation and display

sort - File sorting with side-effect of content display

nano - Text editor for read-only file viewing

rev - Reverse character display for obfuscated content

hd (hexdump) - Binary file inspection and hexadecimal analysis

base64 - Encoding/decoding for data transformation

🛠️ Skills Demonstrated
bash
# Basic file reading
cat /flag

# Sorting as side-effect viewing
sort /flag

# Editor-based viewing
nano /flag

# Reverse character display
rev /flag

# Hexadecimal analysis
hd /flag

# Base64 encoding/decoding
base64 /flag | base64 -d
Tool Repurposing - Using programs beyond their intended purposes

Data Transformation - Encoding/decoding and character manipulation

Binary Analysis - Hexadecimal inspection of file contents

Read-Only Access - Leveraging editors for viewing without modification

Output Interpretation - Understanding transformed or obfuscated data

📂 Challenge Solutions
Tool	Purpose	Command Example
cat	Direct file reading	cat /flag
sort	Display through sorting	sort /flag
nano	Editor-based viewing	nano /flag
rev	Reverse character display	rev /flag
hd	Hexadecimal analysis	hd /flag
base64	Encoding/decoding	base64 /flag | base64 -d
💻 Technical Implementation
Direct File Access
bash
# Simple file reading
cat /flag
# Output: pwn.college{MOn1q380MkoqEFcrdqk7M2R24y1.dNDNxwCO2kjMzEzW}
Editor-Based Viewing
bash
# Use nano to view (not edit) files
nano /flag
# Note: File shows as "unwritable" but content is visible
Data Transformation Techniques
bash
# Reverse character display
rev /flag
# Output: jWzEzMjk20CwxMTJd_VjfC_4-1a07RWPRk_-F5u15eYJ0(egelloc.nwp)

# Hexadecimal analysis
hd /flag
# Output shows hex values and ASCII representation

# Base64 encoding/decoding cycle
base64 /flag > encoded.txt
base64 -d encoded.txt
🔐 Security Insights
Common tools can be weaponized for file access in restricted environments

Read-only file access doesn't prevent content viewing through editors

Data transformation tools (rev, base64) can bypass simple content filters

Hexadecimal analysis reveals raw file content regardless of format

Tool functionality often includes unintended side-effects that can be exploited

Minimal environments still provide multiple paths to file access

🎯 Key Techniques Mastered
Tool Repurposing: Using standard utilities for unintended file access

Data Interpretation: Reading reversed, encoded, or hexadecimal data

Editor Exploitation: Leveraging text editors as file viewers

Encoding Schemes: Understanding and manipulating base64 data

Binary Analysis: Interpreting hexdump output for file content

Minimal Environment Survival: Working with limited tool availability

📝 Usage
bash
# Clone and explore program misuse techniques
git clone https://github.com/username/csci400-lab10.git
cd csci400-lab10

# Review tool-specific solutions
cat solutions/cat_techniques.md
cat solutions/encoding_methods.md
cat solutions/editor_exploitation.md

# Practice with sample files
echo "pwn.college{test_flag}" > test.flag
hd test.flag
rev test.flag
📚 Requirements
Linux environment

Basic command-line utilities (cat, sort, nano, rev, hd, base64)

Understanding of file permissions and basic Linux operations

Access to pwn.college platform for original challenges

📄 License
Academic Use - CSCI 400 Course Materials
